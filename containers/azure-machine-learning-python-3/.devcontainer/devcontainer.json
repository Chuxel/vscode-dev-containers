{ 
	"name": "Azure Machine Learning", 
	"dockerFile": "Dockerfile", 
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/opt/conda/bin/python",
		"python.linting.pylintEnabled": true,
		"python.linting.enabled": true
	},
	
	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	// "appPort": [],

	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "pip install -r requirements.txt",

	// Uncomment the next line to have VS Code connect as an existing non-root user in the container. 
	// On Linux, by default, the container user's UID/GID will be updated to match your local user. See
	// https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist.
	// "remoteUser": "vscode",
	
	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [ 
		"ms-toolsai.vscode-ai",
		"ms-azuretools.vscode-docker"
	]
} 