name: Build, Push, and Release

on:
  repository_dispatch:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Get Tag Name
      id: get_tag_name  
      uses: olegtarasov/get-tag@v1
    - name: Log into Container Registry
      id: docker_login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Checkout
      id: checkouy
      uses: actions/checkout@v1
    - name: Push and Package
      run: |
        # Match version to label - expects label of vX.X.X
        PKG_VERSION="${{ steps.get_tag_name.outputs.tag }}" && PKG_VERSION=${PKG_VERSION:1}
        sed -i '' -E "s/\"version\".?:.?\".+\"/\"version\": \"${PKG_VERSION}\"/g" package.json
        
        # Push images and package
        yarn install
        build/vscdc pack
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload_release_asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vscode-dev-containers-${{ steps.get_tag_name.outputs.tag }}.tgz
        asset_name: vscode-dev-containers-${{ steps.get_tag_name.outputs.tag }}.tgz
        asset_content_type: application/gzip 
