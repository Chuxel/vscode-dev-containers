name: CI & Push "dev"

on: 
  repository_dispatch:
  push:
    branches: master
    paths:
      - 'containers/**'
      - 'script-library/**'

jobs:
  build:
    
    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, 'Automated update') && !contains(github.event.head_commit.message, 'CI ignore')"
    
    steps:

    - name: Container Registry Login
      id: docker_login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Checkout
      id: checkout
      uses: actions/checkout@v1
      
    - name: Push "dev", Package, update CG manifest
      id: push_and_package
      run: |
        # Push dev images and package
        set -e

        yarn install

        GIT_BRANCH=$(echo "${{ github.ref }}" | grep -oP 'refs/(heads|tags)/\K(.+)')
        if [ "$GIT_BRANCH" == "" ]; then 
            GIT_BRANCH=master
        fi
        build/vscdc pack  --release $GIT_BRANCH \
                          --github-repo ${{ github.repository }} \
                          --registry ${{ secrets.REGISTRY }} \
                          --registry-path ${{ secrets.REGISTRY_BASE_PATH }} \
                          --stub-registry ${{ secrets.STUB_REGISTRY }} \
                          --stub-registry-path ${{ secrets.STUB_REGISTRY_BASE_PATH }}

        # Set an output with the resulting package name for upload
        PKG_PREFIX=$(node -p "require('./package.json').name")
        mv ./$PKG_PREFIX-*.tgz ./$PKG_PREFIX-${{ github.sha }}.tgz
        echo "::set-output name=package_name::$PKG_PREFIX-${{ github.sha }}.tgz"

        # Update CG manifest
        build/vscdc cg --no-build --release $BRANCH --github-repo ${{ github.repository }} --registry ${{ secrets.REGISTRY }} --registry-path ${{ secrets.REGISTRY_BASE_PATH }}
        git config --global user.email "vscr-feedback@microsoft.com"
        git config --global user.name "CI"
        git add cgmanifest.json
        git commit -m 'Automated update' \
          && git push "https://ci:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" "HEAD:${{ github.ref }}" \
          || echo 'No updates to cgmanifest.json'

    - name: Upload Package
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.push_and_package.outputs.package_name }}
        path: ./${{ steps.push_and_package.outputs.package_name }}
